#!/usr/bin/env ruby

# <bitbar.title>GitHub Pull Requests List</bitbar.title>
# <bitbar.version>v0.1</bitbar.version>
# <bitbar.author>pataiji</bitbar.author>
# <bitbar.author.github>pataiji</bitbar.author.github>
# <bitbar.desc>List GitHub open Pull Requests in some repositories.</bitbar.desc>
# <bitbar.dependencies>ruby octokit</bitbar.dependencies>
# <bitbar.abouturl>https://gist.github.com/pataiji/5e7ae52ca5a464c2537abe30225f3056</bitbar.abouturl>

require 'octokit'

# list watching repositories
REPOSITORIES = %w(ruby/ruby).freeze
# seconds you need for review(if over this time.(If exceed, it display PR with red text.)
REVIEW_SECONDS = (2 * 24 * 60 * 60).freeze
# See https://help.github.com/articles/creating-an-access-token-for-command-line-use/
ACCESS_TOKEN = '<your 40 char token>'.freeze

LOGO = 'iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAAAXNSR0IArs4c6QAAAAlwSFlzAAAWJQAAFiUBSVIk8AAABBNpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDUuNC4wIj4KICAgPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICAgICAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgICAgICAgICAgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iCiAgICAgICAgICAgIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VSZWYjIgogICAgICAgICAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iCiAgICAgICAgICAgIHhtbG5zOnRpZmY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIj4KICAgICAgICAgPHhtcE1NOkRlcml2ZWRGcm9tIHJkZjpwYXJzZVR5cGU9IlJlc291cmNlIj4KICAgICAgICAgICAgPHN0UmVmOmluc3RhbmNlSUQ+eG1wLmlpZDpFNTE3OEEzMDk5QTAxMUUyOUExNUJDMTA0NkE4OTA0RDwvc3RSZWY6aW5zdGFuY2VJRD4KICAgICAgICAgICAgPHN0UmVmOmRvY3VtZW50SUQ+eG1wLmRpZDpFNTE3OEEzMTk5QTAxMUUyOUExNUJDMTA0NkE4OTA0RDwvc3RSZWY6ZG9jdW1lbnRJRD4KICAgICAgICAgPC94bXBNTTpEZXJpdmVkRnJvbT4KICAgICAgICAgPHhtcE1NOkRvY3VtZW50SUQ+eG1wLmRpZDoyQTQxNEFCQzk5QTExMUUyOUExNUJDMTA0NkE4OTA0RDwveG1wTU06RG9jdW1lbnRJRD4KICAgICAgICAgPHhtcE1NOkluc3RhbmNlSUQ+eG1wLmlpZDpFNTE3OEEzMjk5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'.freeze

client = Octokit::Client.new(access_token: ACCESS_TOKEN)

pull_requests = REPOSITORIES.inject([]) do |ary, repo|
  ary += client.pull_requests(repo)
end

puts "| image=#{LOGO}"
puts '---'
pull_requests.each do |pr|
  color = pr[:created_at].localtime <= (Time.now - REVIEW_SECONDS) ? 'red' : 'black'
  puts "#{pr[:head][:repo][:name]}##{pr[:number]} / #{pr[:title]} | color=#{color} href=#{pr[:html_url]} length=60"
end
