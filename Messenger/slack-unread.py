#!/usr/bin/env python
# coding=utf-8
#
# <bitbar.title> Slack Notification</bitbar.title>
# <bitbar.version>v1.0</bitbar.version>
# <bitbar.author>mgjo5899</bitbar.author>
# <bitbar.author.github>mgjo5899</bitbar.author.github>
# <bitbar.desc>Displays whether there is unread Slack messages</bitbar.desc>
# <bitbar.image></bitbar.image>
#
# by mgjo5899

import requests
import base64
import json
from multiprocessing import Pool

channels_list_url = 'https://slack.com/api/channels.list'
channels_info_url = 'https://slack.com/api/channels.info'

def get_unread_count(token):
	count = 0

	header = {'Authorization':'Bearer ' + token}
	r = requests.post(channels_list_url, headers=header)
	result = json.loads(r.text)['channels']
	
	for j in range(len(result)):
		channel_id = result[j]['id']
		data = {'channel':channel_id}
		r = requests.post(channels_info_url, headers=header, data=data)
		channel_info = json.loads(r.text)['channel']

		if 'unread_count' in channel_info.keys():
			count += channel_info['unread_count']
	
	return count

# Users need to modify this part by generating their own tokens
#tokens = ['xoxp-token', 'xoxp-anothertoken']

results = []
unread_count = 0
pool = Pool(processes=len(tokens))

for token in tokens:
	result = pool.apply_async(get_unread_count, (token,))
	results.append(result)

for r in results:
	unread_count += r.get()

if unread_count == 0:
	print("| image=iVBORw0KGgoAAAANSUhEUgAAADwAAAA8CAYAAAA6/NlyAAAAAXNSR0IArs4c6QAAAAlwSFlzAAAWJQAAFiUBSVIk8AAABHhpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDUuNC4wIj4KICAgPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICAgICAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgICAgICAgICAgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iCiAgICAgICAgICAgIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VSZWYjIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyIKICAgICAgICAgICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIj4KICAgICAgICAgPHhtcE1NOkRlcml2ZWRGcm9tIHJkZjpwYXJzZVR5cGU9IlJlc291cmNlIj4KICAgICAgICAgICAgPHN0UmVmOmluc3RhbmNlSUQ+eG1wLmlpZDpGODdGMTE3NDA3MjA2ODExOEY2MkEwNzM4NDY0N0I3QTwvc3RSZWY6aW5zdGFuY2VJRD4KICAgICAgICAgICAgPHN0UmVmOmRvY3VtZW50SUQ+eG1wLmRpZDpGNzdGMTE3NDA3MjA2ODExOEY2MkEwNzM4NDY0N0I3QTwvc3RSZWY6ZG9jdW1lbnRJRD4KICAgICAgICAgPC94bXBNTTpEZXJpdmVkRnJvbT4KICAgICAgICAgPHhtcE1NOkRvY3VtZW50SUQ+eG1wLmRpZDpBMkE5M0Y4Nzk5RTQxMUU2ODc3NEQ3OUZDNjFFRjM4QTwveG1wTU06RG9jdW1lbnRJRD4KICAgICAgICAgPHhtcE1NOkluc3RhbmNlSUQ+eG1wLmlpZDpBMkE5M0Y4Njk5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")
else:
	print("| image=iVBORw0KGgoAAAANSUhEUgAAACMAAAAjCAYAAAAe2bNZAAAAAXNSR0IArs4c6QAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAABYlAAAWJQFJUiTwAAAEEmlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNS40LjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyIKICAgICAgICAgICAgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iCiAgICAgICAgICAgIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VSZWYjIgogICAgICAgICAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iPgogICAgICAgICA8dGlmZjpPcmllbnRhdGlvbj4xPC90aWZmOk9yaWVudGF0aW9uPgogICAgICAgICA8eG1wTU06RGVyaXZlZEZyb20gcmRmOnBhcnNlVHlwZT0iUmVzb3VyY2UiPgogICAgICAgICAgICA8c3RSZWY6aW5zdGFuY2VJRD54bXAuaWlkOkI4QjUzNzYxMzEzMTExRTRCQTYyRjZDNDE0QjYzMTc4PC9zdFJlZjppbnN0YW5jZUlEPgogICAgICAgICAgICA8c3RSZWY6ZG9jdW1lbnRJRD54bXAuZGlkOkI4QjUzNzYyMzEzMTExRTRCQTYyRjZDNDE0QjYzMTc4PC9zdFJlZjpkb2N1bWVudElEPgogICAgICAgICA8L3htcE1NOkRlcml2ZWRGcm9tPgogICAgICAgICA8eG1wTU06SW5zdGFuY2VJRD54bXAuaWlkOjgyQUEx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")
